#!/usr/bin/env python3

from sys import argv
from math import gcd

def read_test_file(file_name):
    with open(file_name, "r", encoding="utf-8") as file:
        lines = file.readlines()

    number_to_factor = []

    for line in lines:
        number_to_factor.append(int(line))

    return number_to_factor[0]

def pollard_rho(n):
    x = 2
    y = 2
    d = 1

    while d == 1:
        x = (x * x + 1) % n
        y = (y * y + 1) % n
        y = (y * y + 1) % n
        d = gcd(abs(x - y), n)

    if d == n:
        return None
    else:
        return d

def find_numbers(n):
    p = pollard_rho(n)
    q = n // p

    print("{}={}*{}".format(n, p, q))

if len(argv) == 2:
    n = read_test_file(argv[1])
    find_numbers(n)

